% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/methods.R
\docType{methods}
\name{trained-methods}
\alias{trained}
\alias{trained,MLSeq-method}
\alias{trained-methods}
\title{Accessors for the 'trainedModel' slot of an \code{MLSeq} object}
\usage{
trained(object)

\S4method{trained}{MLSeq}(object)
}
\arguments{
\item{object}{an \code{MLSeq} object.}
}
\description{
This slot stores the trained model. This object is returned from \code{train.default} function in caret package.
Any further request using caret functions is available for \code{trainedModel} since this object is in the
same class as the returned object from \code{train.default}. See \code{\link[caret]{train.default}} for details.
}
\examples{
library(DESeq2)
data(cervical)

# a subset of cervical data with first 150 features.
data <- cervical[c(1:150),]

# defining sample classes.
class <- data.frame(condition=factor(rep(c("N", "T"), c(29, 29))))

n <- ncol(data)  # number of samples
p <- nrow(data)  # number of features

# number of samples for test set (20\% test, 80\% train).
nTest <- ceiling(n*0.2)
ind <- sample(n, nTest, FALSE)

# train set
data.train <- data[,-ind]
data.train <- as.matrix(data.train + 1)
classtr <- data.frame(condition=class[-ind, ])

# train set in S4 class
data.trainS4 <- DESeqDataSetFromMatrix(countData = data.train,
                  colData = classtr, formula(~ condition))
data.trainS4 <- DESeq(data.trainS4, fitType = "local")

# Classification and Regression Trees (CART)
cart <- classify(data = data.trainS4, method = "rpart",
          transformation = "vst", ref = "T", normalize = "deseq",
          control = trainControl(method = "repeatedcv", number = 5,
                                 repeats = 3, classProbs = TRUE))

trained(cart)

}
\author{
Gokmen Zararsiz
}
\seealso{
\code{\link[caret]{train.default}}
}

